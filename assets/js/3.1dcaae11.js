(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{164:function(t,a,r){"use strict";r.r(a);var e=r(0),_=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h2",{attrs:{id:"draggable"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#draggable","aria-hidden":"true"}},[t._v("#")]),t._v(" Draggable")]),t._v(" "),r("p",[t._v("可以在"),r("a",{attrs:{href:"#DragTarget"}},[t._v("DragTarget")]),t._v("中拖动的组件。")]),t._v(" "),r("p",[t._v("当一个可拖动组件发生拖动时，它会显示一个在屏幕上跟踪用户手指的 "),r("a",{attrs:{href:""}},[t._v("feedback")]),t._v(" 组件。如果用在 "),r("a",{attrs:{href:""}},[t._v("DragTarget")]),t._v(" 组件上抬起手指，则该 "),r("a",{attrs:{href:""}},[t._v("DragTarget")]),t._v(" 可以选择接收 Draggable 组件携带的数据。")]),t._v(" "),r("p",[t._v("在多点触控设备上，可以同时发生多次拖动，因为可能会有多个指针同时与设备接触。要限制同时拖动的数量，可以使用 maxSimultaneousDrags 属性。默认设置是允许无限数量的同时拖动。")]),t._v(" "),r("p",[t._v("当发生拖动时显示 child 中的组件。如果 childWhenDragging 非 null， 则显示 childWhenDragging 中的组件。")]),t._v(" "),r("h3",{attrs:{id:"属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("属性")]),t._v(" "),r("th",[t._v("功能")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("affinity")]),t._v(" "),r("td",[t._v("控制此组件如何与其他手势竞争以启动拖动")])]),t._v(" "),r("tr",[r("td",[t._v("axis")]),t._v(" "),r("td",[t._v("如果指定，则限制拖动的轴向")])]),t._v(" "),r("tr",[r("td",[t._v("child")]),t._v(" "),r("td",[t._v("包含的子组件")])])])]),t._v(" "),r("h2",{attrs:{id:"dragtarget"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dragtarget","aria-hidden":"true"}},[t._v("#")]),t._v(" DragTarget")])])}],!1,null,null,null);_.options.__file="InteractionModels.md";a.default=_.exports}}]);